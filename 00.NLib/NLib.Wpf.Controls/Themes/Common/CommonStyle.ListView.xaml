<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    mc:Ignorable="PresentationOptions">
    <ResourceDictionary.MergedDictionaries>
        <!--  Force Merge related resource dictionary  -->
        <ResourceDictionary Source="pack://application:,,,/NLib.Wpf.Controls;component/Themes/CommonStyle.xaml" />
        <ResourceDictionary Source="pack://application:,,,/NLib.Wpf.Controls;component/Themes/Common/CommonStyle.CheckedBox.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  CONST LISTVIEW COLUMN WIDTH  -->
    <sys:Double x:Key="ListViewColWidth">100</sys:Double>

    <!--  CONST LISTVIEW's ITEM COLORS  -->
    <SolidColorBrush x:Key="ListViewItemBackground1"
                     PresentationOptions:Freeze="True"
                     Color="White" />
    <SolidColorBrush x:Key="ListViewItemBackground2"
                     PresentationOptions:Freeze="True"
                     Color="{StaticResource WhiteColor}" />

    <SolidColorBrush x:Key="ListViewItemSelectedForground"
                     PresentationOptions:Freeze="True"
                     Color="{StaticResource BlackColor}" />
    <SolidColorBrush x:Key="ListViewItemSelectedBackground"
                     PresentationOptions:Freeze="True"
                     Color="{StaticResource OrangeColor}" />

    <SolidColorBrush x:Key="ListViewItemMouseOverForground"
                     PresentationOptions:Freeze="True"
                     Color="{StaticResource BlackColor}" />
    <SolidColorBrush x:Key="ListViewItemMouseOverBackground"
                     PresentationOptions:Freeze="True"
                     Opacity=".75"
                     Color="{StaticResource CornflowerBlueColor}" />

    <SolidColorBrush x:Key="ListViewItemDisableForground"
                     PresentationOptions:Freeze="True"
                     Color="Black" />
    <SolidColorBrush x:Key="ListViewItemDisableBackground"
                     PresentationOptions:Freeze="True"
                     Color="{StaticResource SilverColor}" />

    <!--  BASE LISTVIEW STYLES  -->
    <Style x:Key="BASEListView" TargetType="ListView">
        <!--  Common  -->
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="AlternationCount" Value="2" />
        <!--  Synchronized  -->
        <Setter Property="IsSynchronizedWithCurrentItem" Value="True" />
        <!--  VirtualizingPanel  -->
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
        <Setter Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="True" />
        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling" />
    </Style>

    <Style x:Key="SingleSelectListView"
           BasedOn="{StaticResource BASEListView}"
           TargetType="ListView">
        <Setter Property="SelectionMode" Value="Single" />
    </Style>

    <Style x:Key="MultiSelectListView"
           BasedOn="{StaticResource BASEListView}"
           TargetType="ListView">
        <Setter Property="SelectionMode" Value="Multiple" />
    </Style>

    <Style x:Key="ExtendedSelectListView"
           BasedOn="{StaticResource BASEListView}"
           TargetType="ListView">
        <Setter Property="SelectionMode" Value="Extended" />
    </Style>

    <!--  BASE LISTVIEW ITEM CONTAINER STYLES  -->
    <Style x:Key="BASEListViewItemContainer" TargetType="{x:Type ListViewItem}">
        <Style.Setters>
            <!--  For auto adjust column size to fit by it's cell content  -->
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <!--  For auto adjust column height to fit by it's cell content  -->
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Stretch" />

            <Setter Property="Margin" Value="0" />
            <Setter Property="Cursor" Value="Hand" />
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                <Setter Property="Background" Value="{DynamicResource ListViewItemBackground1}" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Background" Value="{DynamicResource ListViewItemBackground2}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ListViewItemSelectedForground}" />
                <Setter Property="Background" Value="{DynamicResource ListViewItemSelectedBackground}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ListViewItemMouseOverForground}" />
                <Setter Property="Background" Value="{DynamicResource ListViewItemMouseOverBackground}" />
            </Trigger>

            <!--  Not foucs but item is selected so show disable color.  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="False" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource ListViewItemDisableForground}" />
                <Setter Property="Background" Value="{DynamicResource ListViewItemDisableBackground}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!--  BASE LISTVIEW GROUP CONTAINER STYLES  -->
    <Style x:Key="BASEListViewGroupContainer" TargetType="{x:Type GroupItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Expander BorderBrush="#FFA4B97F"
                              BorderThickness="0,0,0,1"
                              IsExpanded="True">
                        <Expander.Header>
                            <DockPanel LastChildFill="True">
                                <TextBlock HorizontalAlignment="Stretch"
                                           VerticalAlignment="Bottom"
                                           DockPanel.Dock="Left"
                                           FontSize="14"
                                           FontWeight="Bold"
                                           Foreground="CornflowerBlue"
                                           Text="{Binding Name}" />
                                <TextBlock Margin="10,0,0,0"
                                           HorizontalAlignment="Stretch"
                                           VerticalAlignment="Bottom"
                                           DockPanel.Dock="Left"
                                           FontSize="14"
                                           FontStyle="Italic"
                                           FontWeight="Bold"
                                           Foreground="Green"
                                           Text="{Binding ItemCount}" />
                                <TextBlock HorizontalAlignment="Stretch"
                                           VerticalAlignment="Bottom"
                                           DockPanel.Dock="Left"
                                           FontSize="14"
                                           FontStyle="Italic"
                                           Foreground="Black"
                                           Text=" item(s)" />
                                <Grid />
                            </DockPanel>
                        </Expander.Header>
                        <Expander.Content>
                            <Border Margin="1"
                                    Background="White"
                                    BorderBrush="Silver"
                                    BorderThickness="1">
                                <ItemsPresenter />
                            </Border>
                        </Expander.Content>
                    </Expander>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  BASE COLUMN HEADER Container (NORMAL) STYLES  -->
    <Style x:Key="BASEHeaderContainer" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="IsEnabled" Value="True" />
        <Setter Property="IsHitTestVisible" Value="True" />
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
    </Style>
    <!--  BASE COLUMN HEADER (FREEZE) STYLES  -->
    <Style x:Key="BASEHeaderFreezeContainer" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="IsEnabled" Value="True" />
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
    </Style>

    <!--  CELL DATA TEMPLATES  -->

    <!--  CELL DATA TEMPLATES: CHECKEDBOX SELECTED  -->
    <DataTemplate x:Key="Selected">
        <CheckBox HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  IsChecked="{Binding Path=Selected}"
                  Style="{DynamicResource CommonCheckBox}" />
    </DataTemplate>

</ResourceDictionary>