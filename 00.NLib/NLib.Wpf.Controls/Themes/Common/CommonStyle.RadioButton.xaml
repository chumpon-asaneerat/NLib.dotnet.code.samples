<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    mc:Ignorable="PresentationOptions">
    <ResourceDictionary.MergedDictionaries>
        <!--  Force Merge related resource dictionary  -->
        <ResourceDictionary Source="pack://application:,,,/NLib.Wpf.Controls;component/Themes/CommonStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  CHECK RADIO COLORS  -->
    <SolidColorBrush x:Key="RadioFocusedBorderBrush"
                     PresentationOptions:Freeze="True"
                     Color="#990077FF" />
    <SolidColorBrush x:Key="RadioDisableBorderBrush"
                     PresentationOptions:Freeze="True"
                     Color="DimGray" />
    <!--  CHECK RADIO PATHS  -->
    <Style x:Key="RadioTickMarkPath"
           PresentationOptions:Freeze="True"
           TargetType="Path">
        <Setter Property="Data" Value="F1 M 0.468732,4.66838L 3.03345,7.95443L 7.28127,0.420569" />
    </Style>
    <Style x:Key="RadioCrossMarkPath"
           PresentationOptions:Freeze="True"
           TargetType="Path">
        <Setter Property="Data" Value="M 0 0 L 8 8 M 0 8 L 8 0" />
    </Style>
    <Style x:Key="RadioCheckedSymbolPath"
           PresentationOptions:Freeze="True"
           BasedOn="{StaticResource RadioTickMarkPath}"
           TargetType="Path" />

    <!--  RADIO BUTTON RELATED SIZE  -->
    <CornerRadius x:Key="CommonRadioButtonCornerRadius" PresentationOptions:Freeze="True">9</CornerRadius>

    <!--  RADIO BUTTON STYLE  -->
    <Style x:Key="CommonRadioButton" TargetType="{x:Type RadioButton}">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator VerticalAlignment="Center"
                                     Background="Transparent"
                                     Cursor="Hand">
                        <BulletDecorator.Bullet>
                            <Grid Width="{Binding RelativeSource={RelativeSource AncestorType=RadioButton}, Path=FontSize}"
                                  Height="{Binding RelativeSource={RelativeSource AncestorType=RadioButton}, Path=FontSize}"
                                  Margin="0,1">
                                <!--  Define size of the Bullet  -->
                                <!--  The two borders  -->
                                <Border Name="RadioOuter"
                                        Background="Transparent"
                                        BorderBrush="{Binding RelativeSource={RelativeSource AncestorType=RadioButton}, Path=Foreground}"
                                        BorderThickness="2"
                                        CornerRadius="{DynamicResource CommonRadioButtonCornerRadius}" />
                                <Border Name="RadioMark"
                                        Margin="4"
                                        Background="{Binding RelativeSource={RelativeSource AncestorType=RadioButton}, Path=Foreground}"
                                        CornerRadius="{DynamicResource CommonRadioButtonCornerRadius}"
                                        Visibility="Hidden" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <!--  Content element  -->
                        <ContentPresenter Margin="5,3"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True" />
                    </BulletDecorator>
                    <!--  If item is checked, trigger the visibility of the mark  -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <!--  If item is checked, trigger the visibility of the mark and change the color of the selected bullet into a darker gray for better highlighting  -->
                            <Setter TargetName="RadioMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckedRadioButton" TargetType="{x:Type RadioButton}">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator VerticalAlignment="Center"
                                     Background="Transparent"
                                     Cursor="Hand">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border"
                                    Width="{Binding RelativeSource={RelativeSource AncestorType=RadioButton}, Path=FontSize}"
                                    Height="{Binding RelativeSource={RelativeSource AncestorType=RadioButton}, Path=FontSize}"
                                    Margin="0,1"
                                    Background="{Binding RelativeSource={RelativeSource AncestorType=RadioButton}, Path=Background}"
                                    BorderBrush="{Binding RelativeSource={RelativeSource AncestorType=RadioButton}, Path=Foreground}"
                                    BorderThickness="2"
                                    ClipToBounds="True">
                                <!--
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="5"
                                                      ShadowDepth="1"
                                                      Color="{Binding RelativeSource={RelativeSource AncestorType=RadioButton}, Path=Foreground}" />
                                </Border.Effect>
                                -->
                                <Viewbox>
                                    <Path x:Name="RadioCheckMark"
                                          Width="8"
                                          Height="8"
                                          Margin="1"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Stretch="Fill"
                                          Stroke="{Binding RelativeSource={RelativeSource AncestorType=RadioButton}, Path=Foreground}"
                                          StrokeEndLineCap="Round"
                                          StrokeStartLineCap="Round"
                                          StrokeThickness="2"
                                          Style="{StaticResource RadioCheckedSymbolPath}" />
                                </Viewbox>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="5,0"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True" />
                    </BulletDecorator>
                    <!--  If item is checked, trigger the visibility of the mark  -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="RadioCheckMark" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="RadioCheckMark" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <!--  If item is checked, trigger the visibility of the mark and change the color of the selected bullet into a darker gray for better highlighting  -->
                            <Setter TargetName="RadioCheckMark" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource RadioFocusedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="BorderBrush" Value="{DynamicResource RadioDisableBorderBrush}" />
                            <Setter TargetName="RadioCheckMark" Property="Stroke" Value="{DynamicResource RadioDisableBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>